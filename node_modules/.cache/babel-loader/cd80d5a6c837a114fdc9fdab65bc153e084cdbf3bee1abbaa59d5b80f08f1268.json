{"ast":null,"code":"import _ from \"lodash\";\nimport { EVENT_CONST } from \"./feeVals\";\nimport calcFee from \"./calcFee\";\nimport speechAndDebate from \"./speechAndDebate\";\nexport default async function parseFile(file, seperate) {\n  const fileReader = new FileReader();\n  fileReader.readAsText(file, \"UTF-8\");\n  var res;\n  var jsonData;\n  await new Promise(resolve => fileReader.onload = () => resolve());\n  jsonData = JSON.parse(fileReader.result);\n  const speechAndDebateSeperate = false;\n  let clubs = jsonData.schools.map(function (club) {\n    const uniqueFamilies = _.groupBy(club.students, student => student.last);\n    const families = Object.entries(uniqueFamilies).map(famArray => {\n      return {\n        name: famArray[0],\n        students: famArray[1]\n      };\n    });\n    return {\n      name: club.name,\n      families: families,\n      entries: club.entries\n    };\n  });\n  const catMap = jsonData.categories[0].events.map(event => {\n    var type;\n    const name = event.name.toLowerCase().trim();\n    console.log(event);\n    if (event.type.toLowerCase().trim() === \"debate\") {\n      type = EVENT_CONST.DEBATE;\n    } else if (name.startsWith(\"jv\")) {\n      type = EVENT_CONST.JV;\n    } else if (name.startsWith(\"jr\")) {\n      type = EVENT_CONST.JR;\n    } else {\n      type = EVENT_CONST.VARSITY;\n    }\n    return {\n      id: event.id,\n      type: type\n    };\n  });\n  clubs = clubs.map(club => {\n    const c = club.families.map(family => {\n      let familyFee = 0;\n      let familyStudents = family.students.length;\n      let seperate = false;\n      //console.log(familyStudents);\n      const f = family.students.map(student => {\n        const entries = club.entries.filter(entry => entry.students.includes(student.id) && entry.active === 1);\n        const events = entries.map(ent => {\n          const fromEventList = catMap.find(cat => cat.id === ent.event);\n          return fromEventList;\n        });\n        if (familyStudents === 1 && speechAndDebateSeperate) {\n          seperate = speechAndDebate(events);\n        }\n        let fee = calcFee(events);\n        familyFee += fee;\n        return {\n          ...student,\n          events: events,\n          fee: fee,\n          sepearte: seperate\n        };\n      });\n      let judgeReq = 0;\n      if (familyStudents === 1) {\n        judgeReq = seperate ? 2 : 1;\n      } else if (familyStudents > 1) {\n        judgeReq = 2;\n      }\n      return {\n        ...family,\n        students: f,\n        fee: familyFee,\n        judgeReq: judgeReq\n      };\n    });\n    const familyFilter = c.filter(family => family.fee > 0);\n    return {\n      ...club,\n      families: familyFilter\n    };\n  });\n  res = clubs;\n  console.log(res);\n  return res;\n}","map":{"version":3,"names":["_","EVENT_CONST","calcFee","speechAndDebate","parseFile","file","seperate","fileReader","FileReader","readAsText","res","jsonData","Promise","resolve","onload","JSON","parse","result","speechAndDebateSeperate","clubs","schools","map","club","uniqueFamilies","groupBy","students","student","last","families","Object","entries","famArray","name","catMap","categories","events","event","type","toLowerCase","trim","console","log","DEBATE","startsWith","JV","JR","VARSITY","id","c","family","familyFee","familyStudents","length","f","filter","entry","includes","active","ent","fromEventList","find","cat","fee","sepearte","judgeReq","familyFilter"],"sources":["/Users/bcrumbac/cs_stuff/fees_cca/fees/src/components/parseTournFile.tsx"],"sourcesContent":["import _ from \"lodash\";\nimport { EVENT_CONST } from \"./feeVals\";\nimport calcFee from \"./calcFee\";\nimport speechAndDebate from \"./speechAndDebate\";\nexport default async function parseFile(file: any, seperate: boolean) {\n  const fileReader: any = new FileReader();\n  fileReader.readAsText(file, \"UTF-8\");\n  var res;\n  var jsonData;\n  await new Promise<void>((resolve) => (fileReader.onload = () => resolve()));\n  jsonData = JSON.parse(fileReader.result);\n\n  const speechAndDebateSeperate = false;\n  let clubs = jsonData.schools.map(function (club: any) {\n    const uniqueFamilies = _.groupBy(club.students, (student: any) => student.last);\n    const families = Object.entries(uniqueFamilies).map((famArray: any) => {\n      return {\n        name: famArray[0],\n        students: famArray[1],\n      };\n    });\n\n    return {\n      name: club.name,\n      families: families,\n      entries: club.entries,\n    };\n  });\n\n  const catMap = jsonData.categories[0].events.map((event: any) => {\n    var type;\n    const name = event.name.toLowerCase().trim();\n    console.log(event);\n    if (event.type.toLowerCase().trim() === \"debate\") {\n      type = EVENT_CONST.DEBATE;\n    } else if (name.startsWith(\"jv\")) {\n      type = EVENT_CONST.JV;\n    } else if (name.startsWith(\"jr\")) {\n      type = EVENT_CONST.JR;\n    } else {\n      type = EVENT_CONST.VARSITY;\n    }\n    return { id: event.id, type: type };\n  });\n\n  clubs = clubs.map((club: any) => {\n    const c = club.families.map((family: any) => {\n      let familyFee = 0;\n      let familyStudents = family.students.length;\n      let seperate = false;\n      //console.log(familyStudents);\n      const f = family.students.map((student: any) => {\n        const entries = club.entries.filter(\n          (entry: any) => entry.students.includes(student.id) && entry.active === 1\n        );\n        const events = entries.map((ent: any) => {\n          const fromEventList = catMap.find((cat: any) => cat.id === ent.event);\n          return fromEventList;\n        });\n        if (familyStudents === 1 && speechAndDebateSeperate) {\n          seperate = speechAndDebate(events);\n        }\n        let fee = calcFee(events);\n        familyFee += fee;\n        return {\n          ...student,\n          events: events,\n          fee: fee,\n          sepearte: seperate,\n        };\n      });\n      let judgeReq = 0;\n\n      if (familyStudents === 1) {\n        judgeReq = seperate ? 2 : 1;\n      } else if (familyStudents > 1) {\n        judgeReq = 2;\n      }\n\n      return  { ...family, students: f, fee: familyFee, judgeReq: judgeReq };\n    });\n    const familyFilter = c.filter((family: any) => family.fee > 0);\n    return {\n      ...club,\n      families: familyFilter,\n    };\n  });\n  res = clubs;\n\n  console.log(res);\n  return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}