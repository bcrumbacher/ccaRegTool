{"ast":null,"code":"import _ from \"lodash\";\nimport { EVENT_CONST } from \"./feeVals\";\nimport calcFee from \"./calcFee\";\nimport speechAndDebate from \"./speechAndDebate\";\nexport default async function parseFile(file) {\n  const fileReader = new FileReader();\n  fileReader.readAsText(file, \"UTF-8\");\n  var res;\n  var jsonData;\n  await new Promise(resolve => fileReader.onload = () => resolve());\n  jsonData = JSON.parse(fileReader.result);\n  console.log(jsonData);\n  /*fileReader.onload = (e) => {\n    console.log(JSON.parse(e.target.result));\n    jsonData = JSON.parse(e.target.result);\n  };*/\n\n  let clubs = jsonData.schools.map(function (club) {\n    const filterStudents = club.students.filter(student => student.grad_year > 2023);\n    const uniqueFamilies = _.groupBy(filterStudents, student => student.last);\n    console.log(uniqueFamilies);\n    const families = Object.entries(uniqueFamilies).map(famArray => {\n      return {\n        name: famArray[0],\n        students: famArray[1]\n      };\n    });\n    return {\n      name: club.name,\n      families: families,\n      entries: club.entries\n    };\n  });\n  const catMap = jsonData.categories[0].events.map(event => {\n    var type;\n    const name = event.name.toLowerCase().trim();\n    console.log(event);\n    if (event.type.toLowerCase().trim() === \"debate\") {\n      type = EVENT_CONST.DEBATE;\n    } else if (name.startsWith(\"jv\")) {\n      type = EVENT_CONST.JV;\n    } else if (name.startsWith(\"jr\")) {\n      type = EVENT_CONST.JR;\n    } else {\n      type = EVENT_CONST.VARSITY;\n    }\n    return {\n      id: event.id,\n      type: type\n    };\n  });\n  clubs = clubs.map(club => {\n    const c = club.families.map(family => {\n      let familyFee = 0;\n      let familyStudents = family.students.length;\n      //console.log(familyStudents);\n      const f = family.students.map(student => {\n        //console.log(student);\n        const entries = club.entries.filter(entry => entry.students.includes(student.id) && entry.active === 1);\n        if (student.last === \"Arnett\") {\n          console.log(student);\n          console.log(entries);\n          console.log(entries.length === 0);\n        }\n        if (entries.length === 0) {\n          console.log(\"return\");\n          return null;\n        }\n        const events = entries.map(ent => {\n          const fromEventList = catMap.find(cat => cat.id === ent.event);\n          return fromEventList;\n        });\n        if (familyStudents === 1) {\n          console.log(student.first + \" \" + student.last);\n          console.log(speechAndDebate(events));\n        }\n        let fee = calcFee(events);\n        //console.log(events);\n        familyFee += fee;\n        return {\n          ...student,\n          events: events,\n          fee: fee\n        };\n      });\n      if (familyFee === 0) {\n        console.log(f.length);\n        console.log(f ? \"true\" : \"false\");\n      }\n      return f ? {\n        ...family,\n        students: f,\n        fee: familyFee\n      } : undefined;\n    });\n    return {\n      ...club,\n      families: c\n    };\n  });\n  res = clubs;\n  console.log(res);\n  return res;\n}","map":{"version":3,"names":["_","EVENT_CONST","calcFee","speechAndDebate","parseFile","file","fileReader","FileReader","readAsText","res","jsonData","Promise","resolve","onload","JSON","parse","result","console","log","clubs","schools","map","club","filterStudents","students","filter","student","grad_year","uniqueFamilies","groupBy","last","families","Object","entries","famArray","name","catMap","categories","events","event","type","toLowerCase","trim","DEBATE","startsWith","JV","JR","VARSITY","id","c","family","familyFee","familyStudents","length","f","entry","includes","active","ent","fromEventList","find","cat","first","fee","undefined"],"sources":["/Users/bcrumbac/cs_stuff/fees_cca/fees/src/components/parseTournFile.tsx"],"sourcesContent":["import _ from \"lodash\";\nimport { EVENT_CONST } from \"./feeVals\";\nimport calcFee from \"./calcFee\";\nimport speechAndDebate from \"./speechAndDebate\";\nexport default async function parseFile(file: any) {\n  const fileReader: any = new FileReader();\n  fileReader.readAsText(file, \"UTF-8\");\n  var res;\n  var jsonData;\n  await new Promise<void>((resolve) => (fileReader.onload = () => resolve()));\n  jsonData = JSON.parse(fileReader.result);\n  console.log(jsonData);\n  /*fileReader.onload = (e) => {\n    console.log(JSON.parse(e.target.result));\n    jsonData = JSON.parse(e.target.result);\n  };*/\n\n  let clubs = jsonData.schools.map(function (club: any) {\n    const filterStudents = club.students.filter((student: any) => student.grad_year > 2023);\n    const uniqueFamilies = _.groupBy(filterStudents, (student: any) => student.last);\n    console.log(uniqueFamilies);\n    const families = Object.entries(uniqueFamilies).map((famArray: any) => {\n      return {\n        name: famArray[0],\n        students: famArray[1],\n      };\n    });\n\n    return {\n      name: club.name,\n      families: families,\n      entries: club.entries,\n    };\n  });\n\n  const catMap = jsonData.categories[0].events.map((event: any) => {\n    var type;\n    const name = event.name.toLowerCase().trim();\n    console.log(event);\n    if (event.type.toLowerCase().trim() === \"debate\") {\n      type = EVENT_CONST.DEBATE;\n    } else if (name.startsWith(\"jv\")) {\n      type = EVENT_CONST.JV;\n    } else if (name.startsWith(\"jr\")) {\n      type = EVENT_CONST.JR;\n    } else {\n      type = EVENT_CONST.VARSITY;\n    }\n    return { id: event.id, type: type };\n  });\n\n  clubs = clubs.map((club: any) => {\n    const c = club.families.map((family: any) => {\n      let familyFee = 0;\n      let familyStudents = family.students.length;\n      //console.log(familyStudents);\n      const f = family.students.map((student: any) => {\n        //console.log(student);\n        const entries = club.entries.filter(\n          (entry: any) => entry.students.includes(student.id) && entry.active === 1\n        );\n        if (student.last === \"Arnett\") {\n          console.log(student);\n          console.log(entries);\n          console.log(entries.length === 0);\n        }\n        if (entries.length === 0) {\n          console.log(\"return\");\n          return null;\n        }\n        const events = entries.map((ent: any) => {\n          const fromEventList = catMap.find((cat: any) => cat.id === ent.event);\n          return fromEventList;\n        });\n        if (familyStudents === 1) {\n          console.log(student.first + \" \" + student.last);\n          console.log(speechAndDebate(events));\n        }\n        let fee = calcFee(events);\n        //console.log(events);\n        familyFee += fee;\n        return {\n          ...student,\n          events: events,\n          fee: fee,\n        };\n      });\n\n      if (familyFee === 0) {\n        console.log(f.length);\n      console.log(f ? \"true\" : \"false\");\n    }\n\n\n      return f ? { ...family, students: f, fee: familyFee } : undefined;\n    });\n    return {\n      ...club,\n      families: c,\n    };\n  });\n  res = clubs;\n\n  console.log(res);\n  return res;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}